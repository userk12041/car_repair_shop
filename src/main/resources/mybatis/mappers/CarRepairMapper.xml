<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.boot.dao.CarRepairDAO">

	<!-- 전체 조회(페이징) 25.04.29 권준우 -->
	<select id="findAllPaged" resultType="com.boot.dto.CarRepairDTO">
		SELECT * FROM repair_shop
		ORDER BY id
		LIMIT #{startRow}, #{rowCount}
	</select>


	<!-- 조건부 조회 (이름 검색) 25.04.29 권준우 -->
	<select id="findByName" parameterType="String" resultType="com.boot.dto.CarRepairDTO">
		SELECT * FROM repair_shop
		WHERE name LIKE CONCAT('%', #{name}, '%')
	</select>
	
	
	<!-- 조건부 조회 (ID 검색) 25.04.29 권준우 -->
	<select id="findById" resultType="com.boot.dto.CarRepairDTO">
		SELECT * FROM repair_shop
		WHERE id = #{id}
	</select>

	<!-- 수정 25.04.29 권준우 -->
	<update id="updateRepairShop" parameterType="com.boot.dto.CarRepairDTO">
		UPDATE repair_shop
		SET 
			name = #{name},
			road_address = #{road_address},
			lot_address = #{lot_address},
			registration_date = #{registration_date},
			open_time = #{open_time},
			close_time = #{close_time},
			tel_number = #{tel_number}
		WHERE id = #{id}
	</update>


	<!-- 삭제 25.04.29 권준우 -->
	<delete id="deleteRepairShop" parameterType="int">
		DELETE FROM repair_shop
		WHERE id = #{id}
	</delete>
	
	<!--	 페이징 처리에 필요 25.04.29 권준우 -->
	<select id="countShops" resultType="int">
		SELECT COUNT(*) FROM repair_shop
	</select>
	
	<!--	 정렬 25.04.29 권준우 -->
	<select id="findAllPagedSorted" resultType="com.boot.dto.CarRepairDTO">
		SELECT * FROM repair_shop
		ORDER BY
			<choose>
				<when test="sortField == 'registration_date'">registration_date</when>
				<when test="sortField == 'name'">name</when>
				<otherwise>id</otherwise>
			</choose>
			<choose>
				<when test="order == 'desc'">DESC</when>
				<otherwise>ASC</otherwise>
			</choose>
		LIMIT #{startRow}, #{rowCount}
	</select>
	
	
	<select id="findPagedSearchSorted" resultType="com.boot.dto.CarRepairDTO">
		SELECT * FROM repair_shop
		WHERE name LIKE CONCAT('%', #{name}, '%')
		ORDER BY
			<choose>
				<when test="sortField == 'name'">name</when>
				<when test="sortField == 'registration_date'">registration_date</when>
				<otherwise>id</otherwise>
			</choose>
			<choose>
				<when test="order == 'desc'">DESC</when>
				<otherwise>ASC</otherwise>
			</choose>
		LIMIT #{startRow}, #{rowCount}
	</select>
	
	
	<select id="countSearchResults" resultType="int">
		SELECT COUNT(*) FROM repair_shop
		WHERE name LIKE CONCAT('%', #{name}, '%')
	</select>
	
	
	<!-- DB 저장 쿼리 25.04.29 권준우 -->
	<insert id="insertShop" parameterType="com.boot.dto.CarRepairDTO">
		INSERT INTO repair_shop
		(name, road_address, lot_address, latitude, longitude, registration_date, open_time, close_time, tel_number)
		VALUES
		(#{name}, #{road_address}, #{lot_address}, #{latitude}, #{longitude}, #{registration_date}, #{open_time}, #{close_time}, #{tel_number})
	</insert>		
    
    
 	<!-- API 동기화 -> DB 갱신 25.04.30 권준우 -->
	<update id="updateShop" parameterType="com.boot.dto.CarRepairDTO">
		UPDATE repair_shop
		SET lot_address = #{lot_address},
			latitude = #{latitude},
			longitude = #{longitude},
			registration_date = #{registration_date},
			open_time = #{open_time},
			close_time = #{close_time},
			tel_number = #{tel_number}
		WHERE name = #{name}
		AND road_address = #{road_address}
	</update>
	
	
	<!-- 이름&주소로 찾기(DB 갱신용) 25.04.30 권준우 -->
	<select id="findByNameAndRoadAddress" resultType="com.boot.dto.CarRepairDTO">
		SELECT * FROM repair_shop
		WHERE name = #{name}
		AND road_address = #{road_address}
	</select>	
    
    
    <select id="getAllCarRepairs" resultType="com.boot.dto.CarRepairDTO">
        SELECT 
            id, 
            name, 
            road_address,
            lot_address,
            latitude,
            longitude,
            open_time,
            close_time,
            tel_number,
            registration_date
        FROM repair_shop
    </select>
    
    <!--좌표 찍는 마커 쿼리--> 
    <select id="getCarRepairInBounds" resultType="com.boot.dto.CarRepairDTO">
    SELECT 
        id,
        name,
        road_address,
        lot_address,
        latitude,
        longitude,
        registration_date,
        open_time,
        close_time,
        tel_number
   	   FROM repair_shop
      WHERE latitude BETWEEN #{swLat} AND #{neLat}
        AND longitude BETWEEN #{swLng} AND #{neLng}
	</select>
	
	<!--아이디 따라 정보 호출(상세보기)-->
	<select id="getRepairById" resultType="com.boot.dto.CarRepairDTO">
	    SELECT *
	    FROM repair_shop
	    WHERE id = #{id}
	</select>
	
	<!--검색 키워드에 따라 리스트 호출-->
	<select id="listSearchByName" resultType="com.boot.dto.CarRepairDTO">
	    SELECT * FROM repair_shop
	    WHERE name LIKE CONCAT('%', #{keyword}, '%')
	</select>
	
	<!--조회수 업데이트-->
	<update id="incrementViewCount" parameterType="int">
	    UPDATE repair_shop SET view_count = view_count + 1 WHERE id = #{id}
	</update>

</mapper>
